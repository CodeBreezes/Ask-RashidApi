@model IEnumerable<BookingAppAPI.ViewModels.BookingDetailsViewModel>

@{
    ViewData["Title"] = "All Bookings";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.ActiveTabName = "Booking";
    var services = ViewBag.Services as List<BookingAppAPI.DB.Services>;
    var selectedFilter = ViewBag.Filter as string;
    var selectedServiceId = ViewBag.ServiceId as int?;
}

<div class="content px-1">
    <div class="card shadow rounded-3">
        <div class="card-header bg-primary text-white rounded-top-3 d-flex flex-wrap justify-content-between align-items-center">
            <h4 class="mb-0">All Bookings</h4>

            <form method="get" asp-action="Index" class="row gx-2 gy-1 align-items-end m-0">
                <!-- Filter dropdown -->
                <div class="col-auto">
                    <label for="filterOption" class="form-label text-white mb-0">Filter</label>
                    <select name="filter" id="filterOption" class="form-select form-select-sm">
                        <option value="today" selected="@(ViewBag.Filter == "today")">Today</option>
                        <option value="thisWeek" selected="@(ViewBag.Filter == "thisWeek")">This Week</option>
                        <option value="thisMonth" selected="@(ViewBag.Filter == "thisMonth")">This Month</option>
                        <option value="thisYear" selected="@(ViewBag.Filter == "thisYear")">This Year</option>
                    </select>
                </div>

                <!-- Service dropdown -->
                <div class="col-auto">
                    <label for="serviceDropdown" class="form-label text-white mb-0">Service</label>
                    <select name="serviceId" id="serviceDropdown" class="form-select form-select-sm">
                        <option value="">-- All Services --</option>
                        @foreach (var service in services)
                        {
                            @if (ViewBag.ServiceId != null && ViewBag.ServiceId == service.UniqueId)
                            {
                                <option value="@service.UniqueId" selected>@service.Name</option>
                            }
                            else
                            {
                                <option value="@service.UniqueId">@service.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="col-auto">
                    <button type="submit" class="btn btn-light btn-sm mt-3">
                        <i class="bi bi-filter me-1"></i> Apply
                    </button>
                </div>
            </form>
        </div>

        <div class="table-responsive p-2">
            <table class="table table-hover table-striped table-bordered align-middle mb-0" id="tblBookings">
                <thead class="table-light text-center">
                    <tr>
                        <th>#</th>
                        <th>Customer Name</th>
                        <th>Service Name</th>
                        <th>Booking Date</th>
                        <th>Topic</th>
                        <th>Notes</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        var index = 1;
                        foreach (var booking in Model)
                        {
                            <tr>
                                <td class="text-center">@index</td>
                                <td>@booking.FullName</td>
                                <td>@booking.ServiceName</td>
                                <td data-order="@booking.StartedDate.ToDateTime(TimeOnly.MinValue).ToString("yyyy-MM-dd")">
                                    @booking.StartedDate.ToString("dd MMM yyyy")
                                </td>
                                <td>
                                    @(booking.Topic != null && booking.Topic.Length > 20 ? booking.Topic.Substring(0, 20) + "..." : booking.Topic)
                                </td>
                                <td>
                                    @(booking.Notes != null && booking.Notes.Length > 20 ? booking.Notes.Substring(0, 20) + "..." : booking.Notes)
                                </td>
                                <td class="text-end">
                                    <a asp-action="Details" asp-route-id="@booking.UniqueId" class="text-primary me-2" title="View">
                                        <i class="fa fa-eye"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@booking.UniqueId"
                                       onclick="return confirm('Are you sure you want to delete this booking?');"
                                       class="text-danger me-2" title="Delete">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">No bookings found for selected filters.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#tblBookings').DataTable({
                pageLength: 10,
                ordering: true,
                order: [[1, 'asc']], // Customer Name (A-Z)
                language: {
                    search: "🔍 Search bookings:",
                    emptyTable: "No bookings found for selected filters."
                },
                columnDefs: [
                    { targets: [0, 2, 3], className: 'text-center' },
                    { targets: 0, orderable: false } // # column not sortable
                ]
            });

            // Auto numbering for index column (#)
            table.on('order.dt search.dt draw.dt', function () {
                let i = 1;
                table.cells(null, 0, { search: 'applied', order: 'applied' }).every(function () {
                    this.data(i++);
                });
            }).draw();
        });
    </script>


}
